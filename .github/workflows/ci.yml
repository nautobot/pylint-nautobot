---
name: "CI"
concurrency:  # Cancel any existing runs of this workflow for this same PR
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true
on: # yamllint disable-line rule:truthy rule:comments
  push:
    branches:
      - "main"
      - "develop"
  pull_request: ~

env:
  APP_NAME: "pylint-nautobot"

jobs:
  ruff-format:
    runs-on: "ubuntu-latest"
    env:
      INVOKE_PYLINT_NAUTOBOT_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Linting: ruff format"
        run: "poetry run invoke ruff --action format"
  ruff-lint:
    runs-on: "ubuntu-latest"
    env:
      INVOKE_PYLINT_NAUTOBOT_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Linting: ruff"
        run: "poetry run invoke ruff"
  check-docs-build:
    runs-on: "ubuntu-latest"
    env:
      INVOKE_PYLINT_NAUTOBOT_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Check Docs Build"
        run: "poetry run invoke build-and-check-docs"
  poetry:
    runs-on: "ubuntu-latest"
    env:
      INVOKE_PYLINT_NAUTOBOT_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Checking: poetry lock file"
        run: "poetry run invoke lock --check"
  yamllint:
    runs-on: "ubuntu-latest"
    env:
      INVOKE_PYLINT_NAUTOBOT_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Linting: yamllint"
        run: "poetry run invoke yamllint"
  pylint:
    needs:
      - "poetry"
      - "yamllint"
      - "ruff-format"
      - "ruff-lint"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12"]
        nautobot-version: ["stable"]
    env:
      INVOKE_PYLINT_NAUTOBOT_PYTHON_VER: "${{ matrix.python-version }}"
      INVOKE_PYLINT_NAUTOBOT_NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2"  # v3.10.0
      - name: "Build"
        uses: "docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25"  # v5.4.0
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          push: false
          load: true
          tags: "${{ env.APP_NAME }}/nautobot:${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          file: "./development/Dockerfile"
          cache-from: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          cache-to: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          build-args: |
            NAUTOBOT_VER=${{ matrix.nautobot-version }}
            PYTHON_VER=${{ matrix.python-version }}
      - name: "Linting: pylint"
        run: "poetry run invoke pylint"
  pytest:
    needs:
      - "pylint"
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.12"]
        nautobot-version: ["2.3", "2.4"]
        include:
          - python-version: "3.11"
            nautobot-version: "1.6"
          - python-version: "3.11"
            nautobot-version: "2.0"
          - python-version: "3.11"
            nautobot-version: "2.1"
          # Incompatible with 2.2.3-2.3.0
          # due to https://github.com/nautobot/nautobot/pull/6116
          - python-version: "3.11"
            nautobot-version: "2.2.2"
          - python-version: "3.9"
            nautobot-version: "stable"
          - python-version: "3.12"
            nautobot-version: "stable"
          - python-version: "3.13"
            nautobot-version: "next"
    runs-on: "ubuntu-latest"
    env:
      INVOKE_PYLINT_NAUTOBOT_PYTHON_VER: "${{ matrix.python-version }}"
      INVOKE_PYLINT_NAUTOBOT_NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v6"
        with:
          poetry-version: "1.8.5"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2"  # v3.10.0
      - name: "Build"
        uses: "docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25"  # v5.4.0
        with:
          builder: "${{ steps.buildx.outputs.name }}"
          context: "./"
          push: false
          load: true
          tags: "${{ env.APP_NAME }}/nautobot:${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          file: "./development/Dockerfile"
          cache-from: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          cache-to: "type=gha,scope=${{ matrix.nautobot-version }}-py${{ matrix.python-version }}"
          build-args: |
            NAUTOBOT_VER=${{ matrix.nautobot-version }}
            PYTHON_VER=${{ matrix.python-version }}
      - name: "Run Tests"
        run: "poetry run invoke pytest"
