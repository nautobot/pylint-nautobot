[tool.poetry]
name = "pylint-nautobot"
version = "0.4.3"
description = "Custom Pylint Rules for Nautobot"
authors = ["Cristian Sirbu <cristian.sirbu@networktocode.com>", "Leo Kirchner <leo.kirchner@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/pylint-nautobot"
repository = "https://github.com/nautobot/pylint-nautobot"
keywords = ["nautobot", "pylint"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
packages = [
    { include = "pylint_nautobot" },
]

[tool.poetry.dependencies]
python = ">=3.9.2,<3.14"
pylint = ">=3.3.0,<4.0"
importlib-resources = ">=5.12.0"
pyyaml = ">=6.0.1"
toml = ">=0.10.2"

[tool.poetry.group.dev.dependencies]
coverage = "*"
invoke = "*"
ipython = "*"
pytest = "*"
ruff = "*"
yamllint = "*"
Markdown = "*"
towncrier = ">=23.6.0,<=24.8.0"
# Render custom markdown for version added/changed/remove notes
markdown-version-annotations = "1.0.1"
# Rendering docs to HTML
mkdocs = "1.6.0"
# Material for MkDocs theme
mkdocs-material = "9.5.32"
tomli = { version = "*", markers = "python_version < '3.11'" }  # tomli is included in the stdlib as of Python 3.11

[tool.poetry.extras]
all = [
]

[tool.pylint.master]
ignore=[
    ".venv",
    "tests/inputs/",
]

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = [
    "line-too-long",
]

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = [
    "FIXME",
    "XXX",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
norecursedirs = [
    "tests/inputs",
]
addopts = "-vv --doctest-modules"
filterwarnings = [
    "ignore:The end_col_offset attribute of MessageTest.*:DeprecationWarning",
    "ignore:The end_line attribute of MessageTest.*:DeprecationWarning",
]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
    "F", "E", "W",  # flake8
    "PL",  # pylint
    "S",  # bandit
    "I",  # isort
]
ignore = [
    # warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D203",  # 1 blank line required before class docstring

    # D212 is enabled by default in google convention, and complains if we have a docstring like:
    # """
    # My docstring is on the line after the opening quotes instead of on the same line as them.
    # """
    # We've discussed and concluded that we consider this to be a valid style choice.
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line

    # Produces a lot of issues in the current codebase.
    "D401",  # First line of docstring should be in imperative mood
    "D407",  # Missing dashed underline after section
    "D416",  # Section name ends in colon
    "E501",  # Line too long
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D",
    "S"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.towncrier]
name = "Pylint Nautobot"
package = "pylint_nautobot"
directory = "changes"
filename = "docs/release_notes.md"
template = "development/towncrier_template.j2"
start_string = "<!-- towncrier release notes start -->"
issue_format = "[#{issue}](https://github.com/nautobot/pylint-nautobot/issues/{issue})"

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "security"
name = "Security"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "dependencies"
name = "Dependencies"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "housekeeping"
name = "Housekeeping"
showcontent = true
